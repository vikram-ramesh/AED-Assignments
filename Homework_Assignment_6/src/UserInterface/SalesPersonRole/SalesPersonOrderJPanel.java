/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SalesPersonRole;

import Business.Business;
import Business.SalesPerson.SalesPerson;
import Business.OrderCatalogs.MasterOrderCatalog;
import Business.OrderCatalogs.Order;
import Business.OrderCatalogs.OrderItem;
import Business.Supplier.Product;
import UserInterface.AdminRole.ManageSuppliers.ManageSuppliersJPanel;
import UserInterface.Orders.CreateOrder;
import UserInterface.SupplierRole.ViewProductDetailJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mansi
 */
public class SalesPersonOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SalesPersonOrderJPanel
     */
    JPanel userProcessContainer;
    MasterOrderCatalog masterOrderCatalog;
    SalesPerson salesPerson;
    Business business;

    public SalesPersonOrderJPanel(JPanel userProcessContainer,Business business, SalesPerson salesPerson) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.masterOrderCatalog = business.getMasterOrderCatalog();
        this.salesPerson = salesPerson;
        this.business = business;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesPersonOrdersDirectoryJTable = new javax.swing.JTable();
        cancelOrderJButton = new javax.swing.JButton();
        addOrderBtn = new javax.swing.JButton();
        viewOrderBtn1 = new javax.swing.JButton();

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Orders");

        salesPersonOrdersDirectoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Sold to Customer", "Market"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(salesPersonOrdersDirectoryJTable);
        if (salesPersonOrdersDirectoryJTable.getColumnModel().getColumnCount() > 0) {
            salesPersonOrdersDirectoryJTable.getColumnModel().getColumn(0).setResizable(false);
            salesPersonOrdersDirectoryJTable.getColumnModel().getColumn(1).setResizable(false);
            salesPersonOrdersDirectoryJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        cancelOrderJButton.setText("Cancel Order");
        cancelOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOrderJButtonActionPerformed(evt);
            }
        });

        addOrderBtn.setText("Add New Order");
        addOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderBtnActionPerformed(evt);
            }
        });

        viewOrderBtn1.setText("View Order");
        viewOrderBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(119, 119, 119)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(addOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewOrderBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelOrderJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelOrderJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewOrderBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(235, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    public void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) salesPersonOrdersDirectoryJTable.getModel();
        dtm.setRowCount(0);
        for (Order order : masterOrderCatalog.getOrderList()) {
            if (salesPerson.equals(order.getSalesPerson())) {
                Object row[] = new Object[3];
                row[0] = order;
                row[1] = order.getCustomer();
                row[2] = order.getCustomer().getMarket();
                dtm.addRow(row);
            }
        }

    }
    private void cancelOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOrderJButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = salesPersonOrdersDirectoryJTable.getSelectedRow();
        if (selectedRow >= 0) {

            int dialogueButton = JOptionPane.YES_NO_OPTION;
            int dialogueResult = JOptionPane.showConfirmDialog(null, "Are you sure you would like to delete", "Warning", dialogueButton);
            if (dialogueButton == JOptionPane.YES_OPTION) {
                Order order = (Order) salesPersonOrdersDirectoryJTable.getValueAt(selectedRow, 0);
                masterOrderCatalog.removeOrder(order);
                populateTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please select the row", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_cancelOrderJButtonActionPerformed

    private void addOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderBtnActionPerformed
        CreateOrder cOrder = new CreateOrder(userProcessContainer, business,salesPerson);
        userProcessContainer.add("CreateOrder", cOrder);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_addOrderBtnActionPerformed

    private void viewOrderBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderBtn1ActionPerformed
        int row = salesPersonOrdersDirectoryJTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Order order= (Order)salesPersonOrdersDirectoryJTable.getValueAt(row, 0);
            ViewOrderListJPanel panel = new ViewOrderListJPanel(this.userProcessContainer, order);
            userProcessContainer.add("ViewOrderListJPanel",panel );
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        
            

       
    }//GEN-LAST:event_viewOrderBtn1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOrderBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton cancelOrderJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable salesPersonOrdersDirectoryJTable;
    private javax.swing.JButton viewOrderBtn1;
    // End of variables declaration//GEN-END:variables
}
