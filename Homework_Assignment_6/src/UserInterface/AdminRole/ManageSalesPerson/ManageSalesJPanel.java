/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole.ManageSalesPerson;

import Business.SalesPerson.SalesPerson;
import Business.SalesPerson.SalesPersonDirectory;
import Business.Supplier.Supplier;
import Business.Supplier.SupplierDirectory;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mansi
 */
public class ManageSalesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSalesJPanel
     */
    private JPanel userProcessContainer;
    private SalesPersonDirectory salesPersonDirectory;
    private UserAccountDirectory userAccountDirectory;
    public ManageSalesJPanel(JPanel userProcessContainer,SalesPersonDirectory salesPersonDirectory, UserAccountDirectory userAccountDirectory) {
        initComponents();
        this.userAccountDirectory = userAccountDirectory;
        this.userProcessContainer = userProcessContainer;
        this.salesPersonDirectory = salesPersonDirectory;
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnViewSupplier = new javax.swing.JButton();
        btnAddSalesPerson = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesPersonTable = new javax.swing.JTable();
        personIdtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        findPersonBtn = new javax.swing.JButton();

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnViewSupplier.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnViewSupplier.setText("View Sales Person");
        btnViewSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSupplierActionPerformed(evt);
            }
        });

        btnAddSalesPerson.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddSalesPerson.setText("Add Sales Person");
        btnAddSalesPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSalesPersonActionPerformed(evt);
            }
        });

        salesPersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales Person First Name", "Sales Person LastName", "UserName", "Sales Person ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(salesPersonTable);
        if (salesPersonTable.getColumnModel().getColumnCount() > 0) {
            salesPersonTable.getColumnModel().getColumn(0).setResizable(false);
            salesPersonTable.getColumnModel().getColumn(1).setResizable(false);
            salesPersonTable.getColumnModel().getColumn(2).setResizable(false);
            salesPersonTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setText("Enter  ID");

        findPersonBtn.setText("Find Person");
        findPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPersonBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddSalesPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(personIdtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(findPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnViewSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddSalesPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findPersonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personIdtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(182, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        int row = salesPersonTable.getSelectedRow();
        
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        SalesPerson s = (SalesPerson)salesPersonTable.getValueAt(row, 0);
        UserAccount ua = (UserAccount)salesPersonTable.getValueAt(row, 2);
        salesPersonDirectory.removeSalesPerson(s);
        userAccountDirectory.removeUserAccount(ua);
        JOptionPane.showMessageDialog(null, "SalesPerson removed Successfully !");
        
        refreshTable();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnViewSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSupplierActionPerformed

        int row = salesPersonTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        SalesPerson s = (SalesPerson) salesPersonTable.getValueAt(row,0);
        UserAccount ua = (UserAccount)salesPersonTable.getValueAt(row, 2);
        ViewSalesPersonJPanel vs = new ViewSalesPersonJPanel(userProcessContainer,s,ua);
        userProcessContainer.add("ViewSalesPersonJPanel", vs);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewSupplierActionPerformed

    private void btnAddSalesPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSalesPersonActionPerformed

        AddSalesPersonJPanel  as = new AddSalesPersonJPanel (userProcessContainer, salesPersonDirectory,userAccountDirectory);
        userProcessContainer.add("AddSalesPersonJPanel", as);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddSalesPersonActionPerformed

    private void findPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findPersonBtnActionPerformed
        int Id = Integer.parseInt(personIdtxt.getText());
        SalesPerson person =  salesPersonDirectory.searchSalesPerson(Id);
        if(person != null){
            
            for(UserAccount ua : userAccountDirectory.getUserList()){
                if((ua.getRole().equals("SalesPerson"))&&(ua.getSalesPerson().equals(person))){
                ViewSalesPersonJPanel vs = new ViewSalesPersonJPanel(userProcessContainer, person,ua);
                userProcessContainer.add("ViewSalesPersonJPanel", vs);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                }
            }
             
        }else{
            JOptionPane.showMessageDialog(null, "Salesperson does not exist", "Info", JOptionPane.INFORMATION_MESSAGE);
        
        }
        
    }//GEN-LAST:event_findPersonBtnActionPerformed

 public void refreshTable(){
       DefaultTableModel model = (DefaultTableModel) salesPersonTable.getModel();
       model.setRowCount(0);
        for (SalesPerson s : salesPersonDirectory.getSalesPersonList()) {
            Object row[] = new Object[4];
            row[0] = s;
            row[1] = s.getSalesPerLname();
            for(UserAccount user: userAccountDirectory.getUserList()){
                System.out.println(user.getUsername());
                if(user.getRole().equals("SalesPerson")){
                    if(user.getSalesPerson().equals(s)){
                row[2]= user;}
                }
                }    
            row[3] = s.getSalesPersonId();
            model.addRow(row);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSalesPerson;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnViewSupplier;
    private javax.swing.JButton findPersonBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField personIdtxt;
    private javax.swing.JTable salesPersonTable;
    // End of variables declaration//GEN-END:variables
}
